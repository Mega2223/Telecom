listaglobal com todos os pacotes e cada vez q  uma dependencia é carregada colocar ela na lista

NETWORK

(Datagramas de comunicação interna da rede)

NetworkDatagram (É aceito vindo de clients)
[NDT-%TTD%-(%ROUTE%)-%TYPE%-(%DATA%)] 
-- verificar roteadores, se não existir verificar conexões
-- na array de protocolos de rede colocar um listener de mensagens para todas as interfaces
-- É bom colocar o remetente também, já que a rota vai diminuindo

DiscoveryDatagram
[DDT-%TTD%-(%ROUTE%)-%TYPE%-%REPLY_BOOL%]
-- Usado no mapeamento de rede, REPLY_BOOL é true se ele está respondendo alguma requisição

ConnectionsDatagram
[CDT-%TTD%-(%VISITED_ROUTERS%)-%ORIGIN_NAME%-(%ROUTER_KNOWN_CONNECTIONS%)]
--- Usado no mapeamento de rede, uma vez que um roteador conhece seus vizinhos ele deve fazer
--- broadcast de toda a sua área conhecida peara o resto da rede
--- %VISITED_ROUTERS% = (A)(B)(C)
--- %KNOWN_ROUTER_CONNECTIONS% = (A)(B)(C)

NetworkStateDatagram
[NSD-%ROUTER_NAME%-(%DATA%)]
(%DATA%) =
    (REQUEST) ||
    (MEMORY=(%ROUTER_MEMORY%) CONFIG=(%ROUTER_CONFIG%))

MulticastDatagram

BroadcastDatagram

(Datagramas de contato com clientes)

TransportDatagram
[TDT-%DEST_NAME%-(%DATA%)]
-- É criado quando a mensagem deve sair da rede

TRANSPORT

SingleMessagePacket
[SMP-%DEST%-(%DATA%)]
-- Meio que um UDP

APPLICATION

Routers:
PingMessage